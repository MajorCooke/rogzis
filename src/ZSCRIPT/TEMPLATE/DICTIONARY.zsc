class ZDictionary_@Type{
    Array<Name> Keys;
    Array<@Type> Values;

    bool Put(Name Key, @Type Value){
        if(!Key || Key=='' || !Value || Get(Key))
            return false;
        else if(Keys.Find(int(Key))==Keys.Size())
            ZManager.Error("Key: "..Key.." Already Exists", ERR_ERROR);
        Keys.Push(int(Key));
        Values.Push(Value);
        return true;
    }
    
    @Type Get(Name Key) const{
        uint Index=Keys.Find(int(Key));
        if(Index==Keys.Size())
            return null;
        return Values[Index];
    }
    
    @Type Remove(Name Key){
        uint Index=Keys.Find(int(Key));
        @Type Value=Values[Index];
        Keys.Delete(Index);
        Values.Delete(Index);
        return Value;
    }
    
    uint Size() const
    {return Keys.Size();}
    
    ZDictionaryEntry_@Type Index(uint Index) const
    {return ZDictionaryEntry_@Type.Create(Keys[Index], Values[Index]);}
    
    void Clear(){
        Keys.Clear();
        Values.Clear();
    }
}

class ZDictionaryEntry_@Type{
    Name Key;
    @Type Value;
    
    static
    ZDictionaryEntry_@Type Create(Name Key, @Type Value){
        ZDictionaryEntry_@Type Entry=new('ZDictionaryEntry_@Type');
        Entry.Key=Key;
        Entry.Value=Value;
        return Entry;
    }
}