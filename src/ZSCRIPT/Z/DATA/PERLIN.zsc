class ZPerlin{
    private
    ZMatrix Noise;

    static
    ZPerlin Create(int Seed=int('NoiseyBoi'), int Height=16, int Width=16, int OctaveCount=8)
    {return new("ZPerlin").Init(Seed, Height, Width, OctaveCount);}

    private
    ZPerlin Init(int Seed, int Height, int Width, int OctaveCount){
        Array<ZMatrix> Noises;
        ZMatrix BaseNoise=new("ZMatrix").WhiteNoise(Height, Width, Seed);
        for(int Octave=0; Octave<OctaveCount; Octave++)
            Noises.Push(BaseNoise.SmoothNoise(Octave));
        double Amplitude=1,
               TotalAmplitude=0;
        Noise=ZMatrix.Create(Height, Width);
        for(int Octave=OctaveCount-1; Octave>=0; Octave--){
            TotalAmplitude+=Amplitude*=.5;
            for(int i=0; i<Height; i++)
                for(int j=0; j<Width; j++)
                    Noise.Set(i, j, Noise.Get(i, j)+Noises[Octave].Get(i, j));
        }
        for(int i=0; i<Height; i++)
            for(int j=0; j<Width; j++)
                Noise.Set(i, j, Noise.Get(i, j)/TotalAmplitude);
        return self;
    }

    double Get(int Row, int Column)
    {return Noise.Get(Row, Column);}
}