class ZMarine:ZPlayer{
    Default{
        //Descriptors
        Player.DisplayName "Marine";
        Player.AttackZOffset 13;
        //Start Items
        Player.StartItem "Pistol";
        Player.StartItem "Fist";
        Player.StartItem "Clip", 50;
        //Weapons
        Player.WeaponSlot 1, "Fist";
        Player.WeaponSlot 2, "Pistol";
    }

    override
    void PreTick(){
        super.PreTick();
        MStats.ArmorTick(self);
        MStats.Recharge(self);
    }

    override
    void UpdateStats(){
        [Health, MaxHealth, RunHealth]=MStats.GetHealth();
        A_SetHealth(Health);
        [ForwardMove1, ForwardMove2]=MStats.GetForwardMove();
        [SideMove1, SideMove2]=MStats.GetSideMove();
        ViewBob=MStats.ViewBob;
        JumpZ=MStats.JumpZ;
    }

    override
    void SetAimTarget(){
        FLineTraceData Data;
        Trace(Data, 2048, Stats.ActualPitch);
        AimTarget=Data.HitActor;
    }

    override
    bool Trace(out FLineTraceData Data, double Distance=1024, double Pitch=0)
    {return LineTrace(Stats.ActualYaw, Distance, Pitch, Data: Data);}

    override
    void HandleScreenShake(){
        AddScreenShake(ZCalc.NormRangeMap(Vel.Z-LastVel.Z, 35, 50));
        double CurrentShake=MStats.ShakeLevel*ZCalc.NormRange(ZCalc.SmoothStart(Stats.Shake));
        if(CurrentShake>0){
            ActiveYaw=CurrentShake*ZCalc.DRangeMap(YawShake.Get(Level.MapTime%1000, 1), 2, 7, -2.5, 2.5);
            ActivePitch=CurrentShake*ZCalc.DRangeMap(PitchShake.Get(Level.MapTime%1000, 1), 2, 7, -2.5, 2.5);
            ActiveRoll=CurrentShake*ZCalc.DRangeMap(RollShake.Get(Level.MapTime%1000, 1), 2, 7, -5, 5);
            AddScreenShake(-.02);
        }else ActiveYaw=ActivePitch=ActiveRoll=0;
    }

    override
    int DamageMobj(Actor Inflictor, Actor Source, int Damage, Name Mod, int Flags=0, double Angle=0){
        Damage=MStats.ModifyDamageTaken(Inflictor, Source, Damage, Mod, Flags, Angle);
        Damage=super.DamageMobj(Inflictor, Source, Damage, Mod, Flags|DMG_NO_ARMOR|DMG_NO_FACTOR, Angle);
        return Damage;
    }

    override
    int TakeSpecialDamage(Actor Inflictor, Actor Source, int Damage, Name DamageType){
        MStats.Health-=Damage;
        Damage=(Damage>=TELEFRAG_DAMAGE || MStats.Health<=0)?Damage:0;
        return Damage;
    }

    override
    void CheatGive(String Name, int Amount)
    {console.printf("WIP");}
}

#include "ZSCRIPT/Z/PLYR/MARINE/STATS.zsc"
#include "ZSCRIPT/Z/PLYR/MARINE/MOVEMENT.zsc"