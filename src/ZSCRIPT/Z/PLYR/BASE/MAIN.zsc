class ZPlayer:PlayerPawn{
    int Buttons,
        OldButtons,
        NewButtons,
        SameButtons;

    double RelativeZ;

    Actor AimTarget;

    ZStats Stats;

    ZMStats MStats;

    [Property]{
        [Default]
        Species="Player";
    }

    override
    void PostBeginPlay(){
        super.PostBeginPlay();
        UpdateStats();
        Perl2Shake=ZMapper.Create(2, 7, -2.5, 2.5);
        Stats.ActualPitch=Pitch;
        Stats.ActualYaw=Angle;
        Stats.ActualRoll=Roll;
        ZBroadcaster.Notification("You feel sated");
        ZBroadcaster.Notification("Your throat feels dry");
        ZBroadcaster.Notification("The sun is shining, it's a beautiful day");
    }

    virtual
    bool ShouldTick() const
    {return Player && Player.mo==self && 0<Health;}

    virtual
    void AddScreenShake(double Amount)
    {Stats.Shake=Clamp(Stats.Shake+Amount, 0, 1);}

    override
    void Tick(){
        super.Tick();
        BaseTick();
        if(!ShouldTick())
            return;
        PreTick();
        RealTick();
        PostTick();
    }

    virtual
    void BaseTick(){}

    virtual
    void PreTick(){
        UpdateStats();
        RecordInput();
        SetAimTarget();
        SetRelativeZ();
    }

    virtual
    void RealTick(){}

    virtual
    void PostTick(){
        HandleView();
        CheckCollisionEffects();
    }

    virtual
    void UpdateStats(){}

    virtual
    void RecordInput(){
        Buttons=Player.cmd.buttons;
        OldButtons=Player.oldbuttons;
        NewButtons=Buttons & ~OldButtons;
        SameButtons=Buttons & OldButtons;
    }

    virtual
    void SetAimTarget(){
        FLineTraceData Data;
        Trace(Data, 2048, Stats.ActualPitch, ViewHeight);
        AimTarget=Data.HitActor;
    }

    virtual
    void SetRelativeZ()
    {RelativeZ=Pos.Z-GetZAt();}

    override
    void CheckPitch(){}

    virtual
    bool Trace(out FLineTraceData Data, double Distance=1024, double Pitch=0, double OffsetZ=0) const
    {return LineTrace(Stats.ActualYaw, Distance, Pitch, 0, OffsetZ, Data: Data);}

    override
    void CheatGive(String Name, int Amount)
    {ZManager.Error("WIP", ERR_ERROR);}
}

#include "ZSCRIPT/Z/PLYR/BASE/VIEW.zsc"
#include "ZSCRIPT/Z/PLYR/BASE/STATS.zsc"
#include "ZSCRIPT/Z/PLYR/BASE/MOVEMENT.zsc"