class ZMood play{
    const DIMENSIONCOUNT=3;

    ZVector Dimensions;

    static
    ZMood Create(ZPersonality Personality){
        ZMood Result=new('ZMood');
        Result.Dimensions=Personality.ToPAD();
        return Result;
    }

    ZVector PAD()
    {return Dimensions.Clone();}

    ZMoodSubspace Subspace(){
        switch(ZCalc.Sign(Dimensions.Get(0))){
            case  1: switch(ZCalc.Sign(Dimensions.Get(1))){
                case  1: switch(ZCalc.Sign(Dimensions.Get(2))){
                    case  1: return MD_EXUBERANT;
                    case -1: return MD_DEPENDENT;
                }
                case -1: switch(ZCalc.Sign(Dimensions.Get(2))){
                    case  1: return MD_RELAXED;
                    case -1: return MD_DOCILE;
                }
            }
            case -1: switch(ZCalc.Sign(Dimensions.Get(1))){
                case  1: switch(ZCalc.Sign(Dimensions.Get(2))){
                    case  1: return MD_HOSTILE;
                    case -1: return MD_ANXIOUS;
                }
                case -1: switch(ZCalc.Sign(Dimensions.Get(2))){
                    case  1: return MD_DISDAINFUL;
                    case -1: return MD_BORED;
                }
            }
            default: return MD_NULL;
        }
    }

    ZVector ToEkman(){
        ZManager Manager=ZManager.Instance();
        if(!Manager.M2E_Ekman){
            // Transformation Matrix: Mood -> Emotion - Ekman Model
            static const double StaticM2E[]={
                -.51, -.4, -.64, .4,  -.4,
                 .59,  .2,  .6,  .2,  -.2,
                 .25,  .1, -.43, .15, -.5
            };
            Manager.M2E_Ekman=ZMatrix2.Create(ZMood.DIMENSIONCOUNT, ZEmotion.DIMENSIONCOUNT_EKMAN);
            for(int i=0; i<StaticM2E.Size(); i++)
                Manager.P2M.Values[i]=StaticM2E[i];
        }
        return PAD().M2Multiply(Manager.M2E_Ekman).SClamp(0, 1);
    }
}