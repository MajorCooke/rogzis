extend
class ZPersonality{
    static
    ZPersonality Create(ZMatrix Facets)
    {return new('ZPersonality').Init(Facets.Clone());}

    static
    ZPersonality Randomized()
    {return new('ZPersonality').Init();}

    private
    ZPersonality Init(ZMatrix OrigFacets=null){
        if(!OrigFacets){
            __Facets__=ZMatrix.Create(DIMENSIONS, FACETS);
            ZGaussian Distribution=ZGaussian.Create(0, .25);
            for(int i=0; i<DIMENSIONS*FACETS; i++)
                __Facets__.Values[i]=Clamp(Distribution.Generate(), -1, 1);
        }else __Facets__=OrigFacets.SClamp(-1, 1);
        Update();
        return self;
    }

    ZPersonality Clone() const{
        ZPersonality Result=new('ZPersonality');
        Result.__Facets__=__Facets__.Clone();
        return Result;
    }
}