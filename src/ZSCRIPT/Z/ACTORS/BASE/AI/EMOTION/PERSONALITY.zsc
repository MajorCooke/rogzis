extend
class ZPersonality{
    ZMatrix Facets;

    static
    ZPersonality Create(ZMatrix Facets, bool Mutate=true)
    {return new('ZPersonality').Init(Facets.Clone(), Mutate);}

    static
    ZPersonality Randomized()
    {return new('ZPersonality').Init();}

    private
    ZPersonality Init(ZMatrix OrigFacets=null, bool Mutate=true){
        if(!OrigFacets){
            Facets=ZMatrix.Create(DIMENSIONS, FACETCOUNT);
            ZGaussian Distribution=ZGaussian.Create(.5, .125);
            for(int i=0; i<DIMENSIONS*FACETCOUNT; i++)
                Facets.Values[i]=ZCalc.NormRange(Distribution.Generate());
        }else if(Mutate)
            Facets=OrigFacets.Mutate(ZManager.RandSeed(), MaxChange: .125, MutationRate: .1);
        else Facets=OrigFacets.SClamp(0, 1);
        Update();
        return self;
    }

    ZPersonality Clone() const{
        ZPersonality Result=new('ZPersonality');
        Result.Facets=Facets.Clone();
        return Result;
    }
}