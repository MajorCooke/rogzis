class ZString{
    enum ZE_StrSys{
        English =   1<<0,
        Base64  =   1<<1,
    }

    enum ZE_StrCase{
        Upper   =   1<<2,
        Lower   =   1<<3,
    }

    static const Name Letters[]={
        'A', 'B',
        'C', 'D',
        'E', 'F',
        'G', 'H',
        'I', 'J',
        'K', 'L',
        'M', 'N',
        'O', 'P',
        'Q', 'R',
        'S', 'T',
        'U', 'V',
        'W', 'X',
        'Y', 'Z'
    };

    static const String Base64Table[]={
        "A", "B", "C", "D", "E", "F", "G", "H",
        "I", "J", "K", "L", "M", "N", "O", "P",
        "Q", "R", "S", "T", "U", "V", "W", "X",
        "Y", "Z", "a", "b", "c", "d", "e", "f",
        "g", "h", "i", "j", "k", "l", "m", "n",
        "o", "p", "q", "r", "s", "t", "u", "v",
        "w", "x", "y", "z", "0", "1", "2", "3",
        "4", "5", "6", "7", "8", "9", "+", "/"
    };

    String Letter(uint Index, ZE_StrSys Type){
        String Result;
        if(Type & English){
            Result=Letters[Index];
            if(Type & Lower)
                Result.ToLower();
            else if(Type & Upper)
                Result.ToUpper();
        }else if(Type & Base64)
            Result=Base64Table[Index];
        return Result;
    }

    int Index(String Character, ZE_StrSys Type){
        uint Index;
        if(Type & English){
            Character.ToUpper();
            for(int i=0; i<Letters.Size(); i++)
                if(Character==Letters[i])
                    return i;
        }else if(Type & Base64)
            for(int i=0; i<Base64Table.Size(); i++)
                if(Character==Base64Table[i])
                    return i;
        ZManager.Error("Character does not exist in designated set", ERR_ERROR);
        return -1;
    }
}