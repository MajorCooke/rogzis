class ZF_Linear:ZFunction{}

class ZFunction{
    double Misc;

    ZFunction Child;

    static
    ZFunction Create(Name Type, double Misc=0){
        Type='ZF_'..Type;
        if(!ZUtil.ClassExists(Type)){
            ZManager.Error(Type.." does not exist", ERR_FATAL);
            return null;
        }else{
            ZFunction Result=ZFunction(new());
            Result.Misc=Misc;
            return Result.Init();
        }
    }

    virtual
    ZFunction Init()
    {return self;}

    virtual
    void Attach(ZFunction Function){
        if(Child)
            ZManager.Error("Function already has child", ERR_FATAL);
        Child=Function;
    }

    void Detach()
    {Child=null;}

    virtual
    double Apply(double X){
        if(Child)
            X=Child.Apply(X);
        return X;
    }
}