class ZDrawer ui{
    ZElement Element;

    static
    ZDrawer Create(ZElement Element){
        ZDrawer Result=new('ZDrawer');
        Result.Element=Element;
        return Result;
    }

    static
    void SetClipRect(ZRectangle Rectangle)
    {return Screen.SetClipRect(Rectangle.Pos.X, Rectangle.Pos.Y, Rectangle.Size.X, Rectangle.Size.Y);}

    void DrawTexture(TextureID Tex, double NewHeight=0, double NewWidth=0, double Alpha=1, bool FlipX=false, bool FlipY=false, bool Animate=false, Vector2 Pos=(0, 0)){
        if(!Tex.IsValid())
            return;
        Pos=Element.Rel2VirtualPos(Pos);
        Vector2 Scale=Element.Scale(),
                Size=TexMan.GetScaledSize(Tex);
        Screen.DrawTexture(Tex, Animate, Pos.X/Scale.X, Pos.Y/Scale.Y,
            DTA_Alpha, Alpha,
            DTA_FlipX, FlipX,
            DTA_FlipY, FlipY,
            DTA_ClipTop, int(Element.AABB.Pos.Y),
	        DTA_ClipBottom, int(Element.AABB.Pos.Y+Element.AABB.Size.Y),
            DTA_ClipLeft, int(Element.AABB.Pos.X),
            DTA_ClipRight, int(Element.AABB.Pos.X+Element.AABB.Size.X),
            DTA_DestHeightF, (NewHeight)?NewHeight:Size.Y,
            DTA_DestWidthF, (NewWidth)?NewWidth:Size.X,
            DTA_VirtualHeightF, Screen.GetHeight()/Scale.Y,
            DTA_VirtualWidthF, Screen.GetWidth()/Scale.X
        );
    }
}