extend
class ZManager{
    ZEventManager EventManager;

    static
    clearscope
    void Debug(String Output, Name CVarName)
    {if(CVar.FindCVar(CVarName).GetBool())console.printf(Output);}

    static
    clearscope
    void Error(String Error, ZErrorLevel Level){
        switch(Level){
            case ERR_INFO:break;
            case ERR_WARNING:
                Console.PrintF("\cx%s", Error);
                break;
            case ERR_ERROR:
                Console.PrintF("\cr%s", Error);
                break;
            case ERR_FATAL:
                ThrowAbortException("\cy%s", Error);
                break;
            default:
                ThrowAbortException("Unclassified Error: '\cw%s'", Error);
                break;
        }
    }

    private
    void InitEvents(){}

    private
    void LoadEvents(){
        EventManager=ZEventManager.Instance();
    }
}

class ZEventManager:Thinker{
    private
    Array<ZStimulus> Stimuli;

    static
    ZEventManager Instance(){
        ThinkerIterator it=ThinkerIterator.Create("ZEventManager", STAT_ZDATA);
        ZEventManager p=ZEventManager(it.Next());
        if(!p)p=new("ZEventManager").Init();
        return p;
    }

    private
    ZEventManager Init(){
        ChangeStatNum(STAT_ZDATA);
        return self;
    }

    override
    void Tick(){
        for(int i=Stimuli.Size()-1; i>=0; i--){
            ZStimulus Stimulus=Stimuli[i];
            Stimulus.Tick();
            if(Stimulus.Decay==0){
                Stimuli.Delete(i);
                Stimulus.Destroy();
            }
        }
    }

    void AddStimulus(ZStimulus Stimulus){
        if(Stimuli.Find(Stimulus)!=Stimuli.Size())
            ZManager.Error(String.Format("Stimulus: %s", Stimulus.ID), ERR_ERROR);
        Stimuli.Push(Stimulus);
    }
}