class ZManager:Thinker{
    private
    ZDamageTypes DamageTypes;

    private
    ZArmorUpgrades ArmorUpgrades;

    private
    Parser_Zinf ParserZinf;

    static
    private
    ZManager Instance(){
        ThinkerIterator it=ThinkerIterator.Create("ZManager", STAT_STATIC);
        ZManager p=ZManager(it.Next());
        if(!p)p=new("ZManager").Init();
        return p;
    }

    private
    ZManager Init(){
        ChangeStatNum(STAT_STATIC);
        ParserZinf=Parser_Zinf.Create("ZCONFIG");
        //For registration
        //DamageTypes
        DamageTypes=ZDamageTypes(new("ZDamageTypes").Init());
        ParserTSV=Parser_TSV.Create(ParserZinf.Get("EXTERNAL", "tDAMAGE_TYPES"));
        for(int i=1; i<ParserTSV.Size(); i++){
            Row=ParserTSV.GetRow(i);
            //Flags Management
            Array<String> Flags; Flags.Clear(); ZDamageInfo ActualFlags=0;
            Row.Get(6).Split(Flags, "|", TOK_SKIPEMPTY);
            for(int j=0; j<Flags.Size(); j++)
                if(Flags[j]~=="DMG_ZONE")
                    ActualFlags|=DMG_ZONE;
            //Registration
            DamageTypes.Add(ZDamageType.Create(Row.Get(0), Row.Get(1), Row.GetDouble(2), Row.GetDouble(3), Row.GetDouble(4), Row.GetDouble(5), ActualFlags));
        }
        return self;
    }

    static
    clearscope
    void Debug(String Output, Name CVarName)
    {if(CVar.FindCVar(CVarName).GetBool())console.printf(Output);}

    static
    clearscope
    void Error(String Error, ZErrorLevel Level){
        switch(Level){
            case ERR_INFO:break;
            case ERR_WARNING:
                Console.PrintF("\cx%s", Error);
                break;
            case ERR_ERROR:
                Console.PrintF("\cr%s", Error);
                break;
            case ERR_FATAL:
                ThrowAbortException("\cy%s", Error);
                break;
            default:
                ThrowAbortException("Unclassified Error: '\cw%s'", Error);
                break;
        }
    }

    static
    Parser_Zinf Config()
    {return Instance().ParserZinf;}

    static
    ZDamageType DamageType(Name ID)
    {return Instance().DamageTypes.Get(ID);}
}