class ZManager:Thinker{
	private
	ZItems Items;

	private
	ZArmors Armors;

	private
	ZWeapons Weapons;

	private
	ZDamageTypes DamageTypes;

	private
	Parser_Zinf ParserZinf;

	static
	private
	ZManager Instance(ZStatNum STAT_NUM=STAT_ZDATA){
		ThinkerIterator it=ThinkerIterator.Create("ZManager", STAT_NUM);
		ZManager p=ZManager(it.Next());
		if(!p)p=new("ZManager").Init();
		return p;
	}

	private
	ZManager Init(){
		ChangeStatNum(STAT_ZDATA);
		Items=ZItems(new("ZItems").Init());
		Weapons=ZWeapons(new("ZWeapons").Init());
		ParserZinf=Parser_Zinf.Create("ZCONFIG");
		//For registration
		int i=1; String LumpName; Parser_TSV ParserTSV; TSVRow Row;
		//DamageTypes
		DamageTypes=ZDamageTypes(new("ZDamageTypes").Init());
		until("N/@"==(LumpName=ParserZinf.GetFromArray("EXTERNAL", "tDAMAGE_TYPES", i++))){
			for(int j=0; j<(ParserTSV=Parser_TSV.Create(LumpName)).Size(); j++){
				Row=ParserTSV.GetRow(j);
				//Flags Management
				Array<String> Flags; Flags.Clear(); int ActualFlags=0;
				Row.Get(5).Split(Flags, "|", TOK_SKIPEMPTY);
				for(int k=0; k<Flags.Size(); k++)
					if(Flags[k]~=="DMG_ZONE")
						ActualFlags|=DMG_ZONE;
				//Registration
				DamageTypes.Add(ZDamageType.Create(Row.Get(0), Row.GetDouble(1), Row.GetDouble(2), Row.GetDouble(3), Row.GetDouble(4), ActualFlags));
			}
		}
		Armors=ZArmors(new("ZArmors").Init());
		until("N/@"==(LumpName=ParserZinf.GetFromArray("EXTERNAL", "tARMORS", i++))){
			for(int j=0; j<(ParserTSV=Parser_TSV.Create(LumpName)).Size(); j++){
				Row=ParserTSV.GetRow(j);
				//Stats Management
				ArmorStats Stats;
					//Slot Management
					int Slot;
					if(Row.Get(2)~=="AMR_HEAD")
						Stats.Slot=AMR_HEAD;
					else if(Row.Get(2)~=="AMR_TORSO")
						Stats.Slot=AMR_TORSO;
					else if(Row.Get(2)~=="AMR_HANDS")
						Stats.Slot=AMR_HANDS;
					else if(Row.Get(2)~=="AMR_LEGS")
						Stats.Slot=AMR_LEGS;
					else if(Row.Get(2)~=="AMR_FEET")
						Stats.Slot=AMR_FEET;
					//Flags Management
					Array<String> Flags; Flags.Clear();
					Row.Get(3).Split(Flags, "|", TOK_SKIPEMPTY);
					for(int k=0; k<Flags.Size(); k++)
						if(Flags[k]~=="AMR_PLATE")
							Stats.Info|=AMR_PLATE;
						else if(Flags[k]~=="AMR_MAGNET")
							Stats.Info|=AMR_MAGNET;
						else if(Flags[k]~=="AMR_SHIELD")
							Stats.Info|=AMR_SHIELD;
						else if(Flags[k]~=="AMR_LIGHT")
							Stats.Info|=AMR_LIGHT;
						else if(Flags[k]~=="AMR_ENERGY")
							Stats.Info|=AMR_ENERGY;
						else if(Flags[k]~=="AMR_SEALED")
							Stats.Info|=AMR_SEALED;
						else if(Flags[k]~=="AMR_THRUST")
							Stats.Info|=AMR_THRUST;
						else if(Flags[k]~=="AMR_JETPACK")
							Stats.Info|=AMR_JETPACK;
						else if(Flags[k]~=="AMR_MAGNIFY")
							Stats.Info|=AMR_MAGNIFY;
						else if(Flags[k]~=="AMR_MOWNPOWER")
							Stats.Info|=AMR_MOWNPOWER;
						else if(Flags[k]~=="AMR_SOWNPOWER")
							Stats.Info|=AMR_SOWNPOWER;
						else if(Flags[k]~=="AMR_LOWNPOWER")
							Stats.Info|=AMR_LOWNPOWER;
					Stats.PlateAbsorption=Row.GetDouble(4);
					Stats.Energy=Row.GetInt(5);
					Stats.EnergyRechargeRate=Row.GetInt(6);
					Stats.Magnet=Row.GetInt(7);
					Stats.MagnetRechargeRate=Row.GetInt(8);
					Stats.Shield=Row.GetInt(9);
					Stats.ShieldDivider=Row.GetDouble(10);
					Stats.ShieldRechargeRate=Row.GetInt(11);
					Stats.Light=Row.GetInt(12);
					//Stats.ThrustPower=Row.GetInt(13);
					//Stats.JetpackPower=Row.GetInt(14);
				//Registration
				//Armors.Add(ZArmor.Create(Row.Get(0), Row.Get(1), Stats, Row.GetInt(15), Row.GetInt(16)));
			}
		}
		return self;
	}

	static
	clearscope
	void Debug(String Output, Name CVarName)
	{if(CVar.FindCVar(CVarName).GetBool())console.printf(Output);}

	static
	clearscope
	void Error(String Error, ZErrorLevel Level){
		switch(Level){
			case ERR_INFO:break;
			case ERR_WARNING:
				Console.PrintF("\cx%s", Error);
				break;
			case ERR_ERROR:
				Console.PrintF("\cr%s", Error);
				break;
			case ERR_FATAL:
				ThrowAbortException("\cy%s", Error);
				break;
			default:
				ThrowAbortException("Unclassified Error: '\cw%s'", Error);
				break;
		}
	}

	static
	void StatNum(ZStatNum STAT_NUM1=STAT_ZDATA, ZStatNum STAT_NUM2=STAT_ZDATA){
		ZManager Manager;
		if(Manager=Instance(STAT_NUM1))
			Manager.ChangeStatNum(STAT_NUM2);
	}

	static
	Parser_Zinf Config()
	{return Instance().ParserZinf;}

	static
	Item Item(Name Name)
	{return Instance().Items.Get(Name);}

	static
	ZArmor Armor(Name Name)
	{return Instance().Armors.Get(Name);}

	static
	ZWeapon Weapon(Name Name)
	{return Instance().Weapons.Get(Name);}

	static
	ZDamageType DamageType(Name Name)
	{return Instance().DamageTypes.Get(Name);}
}