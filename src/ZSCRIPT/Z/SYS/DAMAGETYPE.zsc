enum DamageTypeInfo{
	//Effects	-	Multiple
	DMG_ZONE	=	1<<0,
}

class DamageTypes:Registry{
	bool Add(ZDamageType DamageType)
	{return DamageType && super.Add(DamageType);}

	ZDamageType Get(Name Name) const
	{return ZDamageType(super.Get(Name));}
}

class ZDamageType:RegistryItem{
	private
	int DamageFlags;
	
	private
	Name Name;
	
	private
	DataMap Factors;
	
	static
	ZDamageType Create(Name Name, int ArmorPlating=1, int MagneticShield=1, int PlasmaShield=1, int HardLight=1, int DamageFlags=0){
		return new("ZDamageType").Init(Name, ArmorPlating.."", MagneticShield.."", PlasmaShield.."", HardLight.."", DamageFlags);
	}
	
	ZDamageType Init(Name Name, String ArmorPlating, String MagneticShield, String PlasmaShield, String HardLight, int DamageFlags=0){
		self.Name=Name;
		Factors=new("DataMap");
		Factors.Put("ArmorPlating",		ArmorPlating);
		Factors.Put("MagneticShield",	MagneticShield);
		Factors.Put("PlasmaShield",		PlasmaShield);
		Factors.Put("HardLight",		HardLight);
		self.DamageFlags=DamageFlags;
		return self;
	}
	
	override
	Name GetName() const
	{return Name;}
	
	int GetFactor(String ArmorType) const
	{return Factors.GetInt(ArmorType);}
	
	int GetFlags() const
	{return DamageFlags;}
}